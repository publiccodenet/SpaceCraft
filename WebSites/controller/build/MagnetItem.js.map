{"version":3,"file":"MagnetItem.js","sourceRoot":"","sources":["../src/MagnetItem.ts"],"names":[],"mappings":"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","sourcesContent":["import { IoElement, IoElementProps, Register, ReactiveProperty, h2, ioNumberSlider, ioObject, ioButton, PropertyConfig, ioString, ioBoolean, PropertyGroups } from 'io-gui';\nimport { SpacetimeController } from './SpacetimeController.js';\nimport type { Magnet } from './types/Magnet';\nimport type { MagnetViewMetadata } from './types/MagnetViewMetatada.js';\nimport { magnetJoystick, MagnetJoystick } from './MagnetJoystick.js';\n\nexport type MagnetItemProps = IoElementProps & {\n  magnet: Magnet;\n  controller: SpacetimeController;\n}\n\nfunction generateMagnetEditorConfig(metadata: Array<MagnetViewMetadata>) {\n  const viewConfig: PropertyConfig[] = [];\n  metadata.forEach(field => {\n    switch (field.type) {\n      case 'float':\n        viewConfig.push([field.name, ioNumberSlider({\n          min: field.min ?? 0,\n          max: field.max ?? 1,\n          step: field.step ?? 0.001,\n        })]);\n        break;\n      case 'bool':\n        viewConfig.push([field.name, ioBoolean({true: 'io:box_fill_checked', false: 'io:box'})]);\n        break;\n      case 'string':\n        viewConfig.push([field.name, ioString({})]);\n        break;\n      default:\n        break;\n    }\n  });\n  \n  return new Map([[Object, viewConfig]]);\n}\n\nfunction generateMagnetEditorGroups(metadata: Array<MagnetViewMetadata>) {\n  const groups: PropertyGroups = {};\n  metadata.forEach(field => {\n    groups[field.category] = groups[field.category] || [];\n    groups[field.category].push(field.name);\n  });\n  // groups.Main\n  return new Map([\n    [Object, groups],\n  ])\n}\n\n@Register\nexport class MagnetItem extends IoElement {\n    static get Style() {\n        return /* css */`\n            :host {\n                display: flex;\n                flex-direction: column;\n                gap: 0.5em;\n                border: var(--io_border);\n                border-color: var(--io_borderColorOutset);\n                margin: 0.5em 0;\n                padding: 0.5em;\n                border-radius: var(--io_borderRadius);\n                background-color: var(--io_bgColor);\n            }\n            :host > h3 {\n                margin: 0 1em 0 0;\n            }\n            :host > io-slider-2d {\n                align-self: flex-start;\n            }\n    `;\n    }\n\n    @ReactiveProperty({type: Object, init: null})\n    declare magnet: Magnet;\n\n    @ReactiveProperty({type: Object})\n    declare controller: SpacetimeController;\n\n    onDeleteMagnet() {\n        if (this.magnet?.magnetId) this.controller.sendDeleteMagnetEvent(this.magnet.magnetId);\n    }\n\n    onJoystickControl(event: CustomEvent) {\n      const slider = event.target as MagnetJoystick;\n      if (this.magnet?.magnetId) this.controller.sendPushMagnetEvent(this.magnet.magnetId, slider.value[0], slider.value[1]);\n    }\n\n    magnetMutated() {\n      this.controller.sendUpdateMagnetEvent(this.magnet);\n    }\n\n    changed() {\n        const magnetEditorConfig = generateMagnetEditorConfig(this.controller.magnetViewMetadata);\n        const magnetEditorGroups = generateMagnetEditorGroups(this.controller.magnetViewMetadata);\n        this.render([\n            h2(this.magnet.title),\n            ioObject({value: this.magnet, label: 'Magnet Data', config: magnetEditorConfig, groups: magnetEditorGroups,\n              widgets: new Map([[\n                Object, magnetJoystick({value: [0, 0], min: [-0.1, -0.1], max: [0.1, 0.1], '@control': this.onJoystickControl, ctrlTtimeout: 20})\n              ]])\n            }),\n            ioButton({label: 'Delete', action: this.onDeleteMagnet, class: 'red'})\n        ]);\n    }\n}\n\nexport const magnetItem = function(arg0: MagnetItemProps) {\n    return MagnetItem.vConstructor(arg0);\n};"]}