{"version":3,"file":"TabMagnet.js","sourceRoot":"","sources":["../src/TabMagnet.ts"],"names":[],"mappings":"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","sourcesContent":["import { h2, p, Register, ioString, ioButton, div, IoString } from 'io-gui';\nimport { TabBase, TabBaseProps } from './TabBase.js';\nimport { magnetItem } from './MagnetItem.js';\nimport type { Magnet } from './types/Magnet';\nimport type { ViewMetadata } from './SpacetimeController.js';\n\nfunction generateMagnetDataFromMetadata(metadata: Array<ViewMetadata>): Magnet {\n  const data = {} as any;\n  metadata.forEach((field) => {\n    // Only set fields with non-null defaults; otherwise omit so Unity prefab values remain\n    if (field.defaultValue !== null && field.defaultValue !== undefined) {\n      data[field.name as keyof Magnet] = field.defaultValue;\n    }\n  })\n  return data as Magnet;\n}\n\n\n@Register\nexport class TabMagnet extends TabBase {\n    static get Style() {\n        return /* css */`\n          :host {\n              display: block;\n          }\n          :host .input-row {\n              display: flex;\n              flex-direction: row;\n              gap: 10px;\n          }\n          :host .input-row > io-string {\n              flex: 1 1 auto;\n          }\n          :host .input-row > io-button {\n              flex: 0 0 4rem;\n          }\n          :host > io-number-slider {\n              align-self: stretch;\n          }\n          :host > io-number-slider > io-number {\n              flex-basis: 4rem;\n          }\n      `;\n    }\n    onCreateMagnet() {\n        const input = this.$['magnet-name-input'] as IoString;\n        const title = (input).value.trim();\n        if (title) {\n            input.value = '';\n\n            const currentMagnets = this.simulatorState.magnets || [];\n            const existingMagnet = currentMagnets.find(magnet => {\n                return magnet.title.trim().toLowerCase() === title.toLowerCase();\n            });\n\n            if (existingMagnet) {\n                console.warn(`[Magnet] Duplicate magnet: \"${existingMagnet.title}\"`);\n                // this.highlightExistingMagnet(existingMagnet.title);\n                return;\n            }\n\n            const timestamp = Date.now();\n            const randomDigits = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\n            const magnetId = `Magnet_${timestamp}${randomDigits}`;\n\n            const magnetData = generateMagnetDataFromMetadata(this.controller.magnetViewMetadata);\n\n            magnetData.magnetId = magnetId;\n            magnetData.title = title;\n            magnetData.searchExpression = title;\n            magnetData.searchType = 'fuzzy';\n            magnetData.isKinematic = true;\n            \n            // Magnet-specific overrides for physics behavior\n            magnetData.mass = 1000000;  // Heavy magnets resist being pushed by books\n            magnetData.linearDrag = 1000000.0;  // Very high drag so magnets stop immediately\n            magnetData.angularDrag = 1000000.0;  // Very high angular drag\n\n            this.controller.sendCreateMagnetEvent(magnetData);\n        }\n    }\n    onKeyUp(event: KeyboardEvent) {\n        if (event.key === 'Enter') {\n            this.onCreateMagnet();\n        }\n    }\n    changed() {\n        const magnets = this.simulatorState.magnets || [];\n\n        this.render([\n            h2('Magnets'),\n            p('Create magnets to attract related items'),\n            div({class: 'input-row'}, [\n                ioString({id: 'magnet-name-input', placeholder: 'Magnet Search String', live: true, '@keyup': this.onKeyUp}),\n                ioButton({label: 'Add', action: this.onCreateMagnet})\n            ]),\n            ...magnets.map(magnet => magnetItem({magnet: magnet, controller: this.controller}))\n        ]);\n    }\n}\n\nexport const tabMagnet = function(arg0: TabBaseProps) {\n    return TabMagnet.vConstructor(arg0);\n};"]}