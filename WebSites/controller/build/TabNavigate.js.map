{"version":3,"file":"TabNavigate.js","sourceRoot":"","sources":["../src/TabNavigate.ts"],"names":[],"mappings":"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","sourcesContent":["import { h2, Register, IoOptionSelect, MenuOption, IoOptionSelectProps, br } from 'io-gui';\nimport { TabBase, TabBaseProps } from './TabBase.js';\n\n@Register\nexport class TabNavigate extends TabBase {\n    static get Style() {\n        return /* css */`\n            :host {\n                justify-content: center;\n            }\n            :host > h2 {\n                pointer-events: none;\n                user-select: none;\n                -webkit-user-select: none;\n                -moz-user-select: none;\n                -ms-user-select: none;\n            }\n        `;\n    }\n\n    onPointermove(event: PointerEvent) {\n        super.onPointermove(event);\n        if (event.movementX || event.movementY) {\n            this.controller.sendPanEvent(\n                event.movementX * 0.03,\n                event.movementY * 0.03\n            );\n        }\n    }\n\n    changed() {\n        // Force rerender when simulator list changes by reading controller.simulatorRosterTick\n        void (this.controller as any).simulatorRosterTick;\n        const simulators = Array.from(this.controller.currentSimulators?.values() || []);\n        const hasSimulators = simulators.length > 0;\n\n        const headerRow = hasSimulators\n            ? [\n                h2('Simulator:'),\n                br(),\n                IoOptionSelect.vConstructor({\n                    value: this.controller.currentSimulatorId || '',\n                    option: new MenuOption({\n                        options: simulators\n                            .map(s => ({ id: (s.clientName || s.clientId), value: s.clientId }))\n                            .sort((a, b) => a.id.localeCompare(b.id, undefined, { sensitivity: 'base' }))\n                    }),\n                    '@value-input': (e: CustomEvent) => this.onSimulatorChange(e)\n                } as IoOptionSelectProps)\n            ]\n            : [\n                h2('Simulator:'),\n                br(),\n                IoOptionSelect.vConstructor({\n                    value: '(none)',\n                    option: new MenuOption({\n                        options: [{ id: '(none)', value: '(none)' }],\n                        disabled: true,\n                    }),\n                    // no handler; locked selector\n                    'disabled': true\n                } as IoOptionSelectProps)\n            ];\n\n        this.render([\n            ...headerRow,\n            h2('DRAG to pan â€¢ PINCH to zoom'),\n        ]);\n    }\n\n    onSimulatorChange(event: CustomEvent) {\n        const newId = event.detail?.value;\n        if (newId && newId !== this.controller.currentSimulatorId && newId !== '(none)') {\n            (this.controller as any).setCurrentSimulator?.(newId);\n        }\n    }\n}\n\nexport const tabNavigate = function(arg0: TabBaseProps) {\n    return TabNavigate.vConstructor(arg0);\n};"]}