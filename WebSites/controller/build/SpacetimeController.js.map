{"version":3,"file":"SpacetimeController.js","sourceRoot":"","sources":["../src/SpacetimeController.ts"],"names":[],"mappings":"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","sourcesContent":["import { IoElement, Register, ioNavigator, MenuOption, Storage as $, ioMarkdown, ReactiveProperty, IoElementProps } from 'io-gui';\nimport { tabNavigate } from './TabNavigate.js';\nimport { tabSelect } from './TabSelect.js';\nimport { tabInspect } from './TabInspect.js';\nimport { tabMagnet } from './TabMagnet.js';\nimport { tabAdjust } from './TabAdjust.js';\nimport { SimulatorState } from './SimulatorState.js';\nimport { Magnet } from './MagnetItem.js';\n\nfunction generateClientId() {\n    return 'controller-' + Math.random().toString(36).substr(2, 9);\n}\nfunction generateClientName() {\n    const now = new Date();\n    const timestamp = now.toISOString().replace(/[:.]/g, '-').slice(0, 19);\n    return `Controller-${timestamp}`;\n}\n\ntype PresenceState = {\n  [key: string]: Presence[];\n};\n\ntype Presence = {\n  clientId: string;\n  clientName: string;\n  clientType: string;\n  presence_ref: string;\n  startTime: number;\n}\n\ntype SimulatorPresence = {\n  clientId: string;\n  clientName: string;\n  clientType: string;\n  presence_ref: string;\n  shared: SimulatorState;\n  startTime: number;\n}\n\ntype SimulatorTakeoverPayload = {\n  newSimulatorId: string;\n  newSimulatorName: string;\n  startTime: number;\n}\n\nexport type ViewMetadata = {\n  canWrite: boolean;\n  category: string;\n  component: string;\n  defaultValue: any;\n  description: string;\n  displayName: string;\n  name: string;\n  path: string;\n  type: 'bool' | 'float' | 'string';\n  unityType: string;\n  min?: number,\n  max?: number,\n  step?: number,\n}\n\n@Register\nexport class SpacetimeController extends IoElement {\n    static get Style() {\n        return /* css */`\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n            :host > io-navigator {\n                flex: 1 1 auto;\n                overflow: hidden;\n            }\n    `;\n    }\n\n    static supabaseUrl = 'https://gwodhwyvuftyrvbymmvc.supabase.co';\n    static supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd3b2Rod3l2dWZ0eXJ2YnltbXZjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIzNDkyMDMsImV4cCI6MjA1NzkyNTIwM30.APVpyOupY84gQ7c0vBZkY-GqoJRPhb4oD4Lcj9CEzlc';\n    static clientChannelName = 'spacecraft';\n    static clientType = 'controller';\n\n    declare clientId: string;\n    declare clientName: string;\n    declare supabaseClient: any;\n    declare clientChannel: any;\n    declare clientConnected: boolean;\n    declare currentSimulatorId: string | null;\n\n    declare magnetViewMetadata: Array<ViewMetadata>;\n\n    @ReactiveProperty({type: SimulatorState, init: null})\n    declare simulatorState: SimulatorState;\n\n    constructor(props: IoElementProps) {\n        super(props);\n        // Client Identity\n        this.clientId = generateClientId();\n        this.clientName = generateClientName();\n\n        // Connection State\n        this.supabaseClient = null;\n        this.clientChannel = null;\n        this.clientConnected = false;\n        this.currentSimulatorId = null;\n        this.magnetViewMetadata = [];\n        this.connect();\n    }\n\n    connect() {\n        if (typeof supabase === 'undefined') {\n            console.error('Supabase library missing!');\n            return;\n        }\n        try {\n            const channelName = new URLSearchParams(window.location.search).get('channel') || SpacetimeController.clientChannelName;\n            this.supabaseClient = supabase.createClient(SpacetimeController.supabaseUrl, SpacetimeController.supabaseAnonKey);\n            this.clientChannel = this.supabaseClient.channel(channelName, {\n                config: { presence: { key: this.clientId } }\n            });\n            this.setupPresenceHandlers();\n            this.subscribeToChannel();\n        } catch (error) {\n            console.error('Controller connection failed:', error);\n            console.error('[Controller] Connection failed:', error);\n        }\n    }\n\n    ready() {\n        this.render([\n            ioNavigator({\n                menu: 'top',\n                caching: 'proactive',\n                option: new MenuOption({\n                    id: 'root',\n                    options: [\n                        {id: 'About', icon: '📖'},\n                        {id: 'Navigate', icon: '🧭'},\n                        {id: 'Select', icon: '👆'},\n                        {id: 'Inspect', icon: '🔍'},\n                        {id: 'Magnet', icon: '🧲'},\n                        {id: 'Adjust', icon: '⚙️'},\n                    ],\n                    selectedID: $({key: 'page', storage: 'hash', value: 'About'})\n                }),\n                elements: [\n                    ioMarkdown({id: 'About', src: './docs/About.md'}),\n                    tabNavigate({id: 'Navigate', controller: this, simulatorState: this.simulatorState}),\n                    tabSelect({id: 'Select', controller: this, simulatorState: this.simulatorState}),\n                    tabInspect({id: 'Inspect', controller: this, simulatorState: this.simulatorState}),\n                    tabMagnet({id: 'Magnet', controller: this, simulatorState: this.simulatorState}),\n                    tabAdjust({id: 'Adjust', controller: this, simulatorState: this.simulatorState}),\n                ]\n            })\n        ]);\n    }\n\n    // === UNITY COMMUNICATION ===\n\n    sendPanEvent(deltaX: number, deltaY: number) {\n        this.sendEventToSimulator('pan', { panXDelta: deltaX, panYDelta: deltaY });\n    }\n\n    sendZoomEvent(zoomDelta: number) {\n        this.sendEventToSimulator('zoom', { zoomDelta });\n    }\n\n    sendSelectEvent(action: string) {\n        this.sendEventToSimulator('select', { action });\n    }\n\n    sendCreateMagnetEvent(magnetData: Magnet) {\n        this.sendEventToSimulator('createMagnet', { magnetData });\n    }\n\n    sendUpdateMagnetEvent(magnetData: Magnet) {\n        this.sendEventToSimulator('updateMagnet', { magnetData });\n    }\n\n    sendDeleteMagnetEvent(magnetId: string) {\n        this.sendEventToSimulator('deleteMagnet', { magnetId });\n    }\n\n    sendPushMagnetEvent(magnetId: string, deltaX: number, deltaY: number) {\n        this.sendEventToSimulator('pushMagnet', { magnetId, deltaX, deltaY });\n    }\n\n    sendEventToSimulator(eventType: string, data: any) {\n        if (!this.clientChannel) {\n            console.error('[Controller] Cannot send event - no client channel');\n            return;\n        }\n\n        if (!this.currentSimulatorId) {\n            console.error('[Controller] Cannot send event - no current simulator ID');\n            return;\n        }\n\n        const payload = {\n            clientId: this.clientId,\n            clientType: SpacetimeController.clientType,\n            clientName: this.clientName,\n            screenId: 'main',\n            targetSimulatorId: this.currentSimulatorId,\n            ...data\n        };\n\n        this.clientChannel.send({\n            type: 'broadcast',\n            event: eventType,\n            payload: payload\n        }).catch((err: any) => {\n            console.error(`[Controller] Send '${eventType}' failed:`, err);\n        });\n    }\n\n    setupPresenceHandlers() {\n        this.clientChannel\n            .on('presence', { event: 'sync' }, () => {\n                const presenceState = this.clientChannel.presenceState();\n                const simulator = this.findLatestSimulator(presenceState);\n                \n                if (simulator) {\n                    this.magnetViewMetadata = (simulator.shared as any).unityMetaData.MagnetView;\n                    this.currentSimulatorId = simulator.clientId;\n                    this.simulatorState.update(simulator.shared);\n                }\n            })\n            .on('broadcast', { event: 'simulatorTakeover' }, (payload: SimulatorTakeoverPayload) => {\n                this.currentSimulatorId = payload.newSimulatorId;\n            });\n    }\n\n    subscribeToChannel() {\n        this.clientChannel.subscribe(async (status: string) => {\n            if (status === 'SUBSCRIBED') {\n                this.clientConnected = true;\n                await this.clientChannel.track({\n                    clientId: this.clientId,\n                    clientType: SpacetimeController.clientType,\n                    clientName: this.clientName,\n                    startTime: Date.now()\n                });\n            }\n        });\n    }\n\n    async updatePresenceState() {\n        if (this.clientConnected && this.clientChannel) {\n            try {\n                await this.clientChannel.track({\n                    clientId: this.clientId,\n                    clientType: SpacetimeController.clientType,\n                    clientName: this.clientName,\n                    startTime: Date.now()\n                });\n            } catch (error) {\n                console.error('[Connection] Failed to update presence:', error);\n            }\n        }\n    }\n\n    findLatestSimulator(presenceState: PresenceState): SimulatorPresence | null {\n        let latestSimulator = null;\n        let latestStartTime = 0;\n        Object.values(presenceState).forEach(presences => {\n            presences.forEach((presence: Presence) => {\n                if (presence.clientType === 'simulator' && presence.startTime > latestStartTime) {\n                    latestSimulator = presence;\n                    latestStartTime = presence.startTime;\n                }\n            });\n        });\n        return latestSimulator;\n    }\n}"]}