{"version":3,"file":"SpacetimeController.js","sourceRoot":"","sources":["../src/SpacetimeController.ts"],"names":[],"mappings":"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","sourcesContent":["import { IoElement, Register, ioNavigator, MenuOption, Storage as $, ioMarkdown, ReactiveProperty, IoElementProps, ThemeSingleton, div, img, a } from 'io-gui';\nimport { VIEW_MODE_OPTIONS, DEFAULT_VIEW_MODE, ViewMode } from './types/ViewMode.js';\nimport { contentStore } from './services/ContentStore.js';\nimport type { SimulatorSharedContent } from './types/Content.js';\nimport { tabView } from './TabView.js';\nimport { tabSelect } from './TabSelect.js';\nimport { tabInspect } from './TabInspect.js';\nimport { tabArrange } from './TabArrange.js';\nimport { tabAbout } from './TabAbout.js';\nimport { SimulatorState } from './SimulatorState.js';\nimport './Icons.js';\nimport type { Magnet } from './types/Magnet';\nimport type { MagnetViewMetadata } from './types/MagnetViewMetatada.js';\n\nThemeSingleton.themeID = 'dark';\n\nfunction generateClientId() {\n    return 'controller-' + Math.random().toString(36).substr(2, 9);\n}\nfunction generateClientName() {\n    const now = new Date();\n    const timestamp = now.toISOString().replace(/[:.]/g, '-').slice(0, 19);\n    return `Controller-${timestamp}`;\n}\n\ntype PresenceState = {\n  [key: string]: Presence[];\n};\n\ntype Presence = {\n  clientId: string;\n  clientName: string;\n  clientType: string;\n  presence_ref: string;\n  startTime: number;\n}\n\ntype SimulatorPresence = {\n  clientId: string;\n  clientName: string;\n  clientType: string;\n  presence_ref: string;\n  shared: SimulatorState;\n  startTime: number;\n}\n\n@Register\nexport class SpacetimeController extends IoElement {\n    static get Style() {\n        return /* css */`\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100vh; /* lock to viewport height so inner tabs can scroll */\n                width: 100%;\n                min-height: 0; /* allow children to define scrollable area */\n            }\n            :host .header {\n                display: flex;\n                align-items: center; /* vertical centering */\n                justify-content: flex-start; /* inline flow: icons then buttons */\n                gap: 8px;\n                padding: 5px; /* at least 5px padding around row */\n                flex-wrap: wrap; /* allow wrap if needed, but all are siblings */\n                margin-bottom: 5px; /* ensure gap above tab row */\n            }\n            :host .header a.logo {\n                display: inline-flex;\n                padding: 5px; /* at least 5px around icons */\n            }\n            :host .header a.logo img {\n                height: 35px; /* half-height for HiDPI (retina) while staying crisp */\n                width: auto;\n                display: block;\n            }\n            /* chips will be direct children of header after logos; wrapping allowed by header */\n            :host .sim-btn {\n                display: inline-flex;\n                align-items: center;\n                padding: 5px 10px; /* at least 5px padding on buttons */\n                margin: 5px; /* keep 5px gap around each button */\n                border-radius: 12px;\n                border: 1px solid var(--io-color-2, #555);\n                background: var(--io-bg-1, #222);\n                color: var(--io-fg-1, #ddd);\n                cursor: pointer;\n                user-select: none;\n                -webkit-user-select: none;\n                white-space: nowrap;\n                transition: none;\n                font-size: 0.9em; /* slightly smaller label */\n            }\n            :host .sim-btn[selected] {\n                font-weight: 700;\n                filter: brightness(1.6) saturate(1.4);\n                box-shadow: 0 0 0 2px rgba(255,255,255,0.8) inset,\n                            0 0 6px rgba(255,255,255,0.35);\n                outline: 2px solid rgba(255,255,255,0.6);\n                outline-offset: -2px;\n            }\n\t\t\t:host .sim-btn.is-selected {\n                font-weight: 700;\n                filter: brightness(1.6) saturate(1.4);\n                box-shadow: 0 0 0 2px rgba(255,255,255,0.8) inset,\n                            0 0 6px rgba(255,255,255,0.35);\n                outline: 2px solid rgba(255,255,255,0.6);\n                outline-offset: -2px;\n\t\t\t} */\n            \n\t\t\t:host .sim-none {\n\t\t\t\tmargin: 5px;\n\t\t\t\tpadding: 6px 10px;\n\t\t\t\tborder: 1px dashed #555;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tcolor: #aaa;\n\t\t\t}\n            :host > io-navigator {\n                flex: 1 1 auto;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n                min-height: 0; /* allow inner selector to size and scroll */\n            }\n            :host > io-navigator > io-selector {\n                flex: 1 1 auto;\n                min-height: 0; /* critical: lets tab hosts scroll instead of growing */\n                overflow: hidden;\n            }\n            :host > io-navigator > io-menu-options {\n              padding: 0 1px !important;\n              background: transparent;\n              border: 1px solid #555;\n              border-width: 1px 0;\n            }\n            :host > io-navigator > io-menu-options > io-menu-item {\n              height: inherit;\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              flex: 1 1 auto;\n              padding: 1em;\n              border-radius: 0;\n              background: transparent;\n              border: none;\n              color: #000;\n            }\n            :host > io-navigator > io-menu-options > io-menu-item[selected] {\n              background: #222;\n              border: none;\n            }\n            :host > io-navigator > io-menu-options > io-menu-item[vmselected] {\n              text-decoration: underline;\n              text-decoration-thickness: 2px;\n              text-underline-offset: 2px;\n            }\n            :host > io-navigator > io-menu-options > span.divider {\n              margin: 0 !important;\n              border-color: #555;\n              border-width: 0 1px 0 0;\n              opacity: 1;\n            }\n            :host io-object {\n                flex: 1 1 auto;\n            }\n            :host io-property-editor > .row > :first-child {\n                flex: 0 0 10em; \n            }\n            :host io-property-editor > .row > :nth-child(2) {\n                flex: 0 1 20em;\n            }\n            :host io-property-editor io-number-slider {\n              flex: 1 1 auto; \n            }\n            :host io-property-editor io-number-slider > io-number {\n              flex-basis: 4.5em;\n            }\n    `;\n    }\n\n    static supabaseUrl = 'https://gwodhwyvuftyrvbymmvc.supabase.co';\n    static supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd3b2Rod3l2dWZ0eXJ2YnltbXZjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIzNDkyMDMsImV4cCI6MjA1NzkyNTIwM30.APVpyOupY84gQ7c0vBZkY-GqoJRPhb4oD4Lcj9CEzlc';\n    static clientChannelName = 'spacecraft';\n    static clientType = 'controller';\n\n    declare clientId: string;\n    declare clientName: string;\n    declare supabaseClient: any;\n    declare clientChannel: any;\n    declare clientConnected: boolean;\n    declare currentSimulatorId: string | null;\n    declare currentSimulators: Map<string, SimulatorPresence>;\n\n    declare magnetViewMetadata: Array<MagnetViewMetadata>;\n\n    @ReactiveProperty({type: SimulatorState, init: null})\n    declare simulatorState: SimulatorState;\n\n    @ReactiveProperty({type: Number})\n    declare simulatorRosterTick: number;\n\n    constructor(props: IoElementProps) {\n        super(props);\n        // Client Identity\n        this.clientId = generateClientId();\n        this.clientName = generateClientName();\n\n        // Connection State\n        this.supabaseClient = null;\n        this.clientChannel = null;\n        this.clientConnected = false;\n        this.currentSimulatorId = null;\n        this.currentSimulators = new Map();\n        this.magnetViewMetadata = [];\n        this.simulatorRosterTick = 0;\n        this.connect();\n    }\n\n    connect() {\n        if (typeof supabase === 'undefined') {\n            console.error('Supabase library missing!');\n            return;\n        }\n        try {\n            const params = new URLSearchParams(window.location.search);\n            const channelName = params.get('channel') || SpacetimeController.clientChannelName;\n            this.supabaseClient = supabase.createClient(SpacetimeController.supabaseUrl, SpacetimeController.supabaseAnonKey);\n            this.clientChannel = this.supabaseClient.channel(channelName, {\n                config: { presence: { key: this.clientId } }\n            });\n            this.setupPresenceHandlers();\n            this.subscribeToChannel();\n            // Only honor simulatorIndex param (no legacy)\n            const simIndexFromUrl = params.get('simulatorIndex');\n            if (simIndexFromUrl) {\n                (this as any)._preselectSimulatorIndex = parseInt(simIndexFromUrl, 10);\n            }\n        } catch (error) {\n            console.error('Controller connection failed:', error);\n            console.error('[Controller] Connection failed:', error);\n        }\n    }\n    \n    ready() {\n        this.changed();\n        // Send initial viewMode based on current tab and watch for tab changes\n        this.handleHashChange();\n        try { window.addEventListener('hashchange', (ev: HashChangeEvent) => this.handleHashChange()); } catch {}\n        // Capture tab clicks for logging\n        try {\n            const root: any = (this as any).shadowRoot || this;\n            root.addEventListener('click', (ev: MouseEvent) => this.handleMenuClickCapture(ev), { capture: true } as any);\n        } catch {}\n    }\n\n    changed() {\n        // Force re-render of simulator menu on roster updates\n        void this.simulatorRosterTick;\n\n        const simList = Array.from((this.currentSimulators && this.currentSimulators.values && this.currentSimulators.values()) ? this.currentSimulators.values() : []) as any[];\n        const simOptions = simList\n            // Render only sims with a non-zero simulator index\n            .filter((s: any) => {\n                const idx = s.simulatorIndex || (s.shared && s.shared.simulatorIndex) || 0;\n                return idx > 0;\n            })\n            .map((s: any) => ({\n                id: (() => {\n                    const idx = s.simulatorIndex || (s.shared && s.shared.simulatorIndex);\n                    const base = (s.clientName || (s.shared && s.shared.clientName) || 'SpaceCraft');\n                    return (idx ? `${base} ${idx}` : base);\n                })(),\n                value: s.clientId,\n                hue: s.simulatorHue\n            }))\n            .sort((a, b) => a.id.localeCompare(b.id, undefined, { sensitivity: 'base' }));\n\n        this.render([\n            // Top header row: simple siblings (logos then chips), all wrap together\n            div({ class: 'header' }, [\n                a({href: 'https://archive.org/', target: '_blank', class: 'logo'}, [\n                    img({src: 'content/internet_archive_europe_logo.jpeg', alt: 'Internet Archive Europe'})\n                ]),\n                a({href: 'https://www.spacecraft.ing/', target: '_blank', class: 'logo'}, [\n                    img({src: 'content/spacecraft_logo.png', alt: 'SpaceCraft'})\n                ]),\n                ...simOptions.map(opt => {\n                    const hueDeg = Math.round((opt.hue as number) * 360);\n                    const isSelected = (opt.value === (this.currentSimulatorId || ''));\n                    return div({\n                        class: `sim-btn${isSelected ? ' is-selected' : ''}`,\n                        selected: isSelected,\n                        style: {\n                            background: `hsl(${hueDeg} 60% 20%)`,\n                            borderColor: `hsl(${hueDeg} 60% 45%)`,\n                        },\n                        '@click': () => this.onTopBarSimulatorClick(opt.value)\n                    }, `${opt.id}`);\n                })\n            ]),\n            ioNavigator({\n                menu: 'top',\n                caching: 'proactive',\n                option: new MenuOption({\n                    id: 'root',\n                    options: [\n                        {id: 'About', icon: '🚀', value: 'about'},\n                        {id: 'Arrange', icon: '🧲', value: 'arrange'},\n                        {id: 'View', icon: '👀', value: 'view'},\n                        {id: 'Select', icon: '👆', value: 'select'},\n                        {id: 'Inspect', icon: '🔍', value: 'inspect'},\n                    ],\n                    selectedID: $({key: 'page', storage: 'hash', value: 'About'})\n                }),\n                elements: [\n                    tabAbout({id: 'About', controller: this, simulatorState: this.simulatorState}),\n                    tabArrange({id: 'Arrange', controller: this, simulatorState: this.simulatorState}),\n                    tabView({id: 'View', controller: this, simulatorState: this.simulatorState}),\n                    tabSelect({id: 'Select', controller: this, simulatorState: this.simulatorState}),\n                    tabInspect({id: 'Inspect', controller: this, simulatorState: this.simulatorState}),\n                ]\n            })\n        ]);\n\n        // After render, underline the tab that matches simulator viewMode\n        try { requestAnimationFrame(() => this.updateViewModeTabUnderline()); } catch {}\n    }\n\n    // Parse current tab id from location.hash and broadcast as viewMode\n    handleHashChange() {\n        try {\n            const hash = (window.location && window.location.hash || '').replace(/^#/, '');\n            const params = new URLSearchParams(hash);\n            const page = (params.get('page') || 'About').trim();\n            const mode = page.toLowerCase();\n            try { console.log('[Controller] hashchange → page:', page, 'mode:', mode, 'simId:', this.currentSimulatorId); } catch {}\n            if (['about','arrange','view','select','inspect'].includes(mode)) {\n                try { console.log('[Controller] sending setViewMode from tab click', { mode, currentSimulatorId: this.currentSimulatorId }); } catch {}\n                this.sendEventToSimulator('setViewMode', { mode });\n            }\n        } catch {}\n    }\n\n    // Visually mark the tab that matches the current simulator viewMode\n    updateViewModeTabUnderline() {\n        try {\n            const mode = (this.simulatorState?.viewMode || '').toLowerCase();\n            try { console.log('[Controller] viewMode presence update →', mode); } catch {}\n            const root = (this as any).shadowRoot || document;\n            const items = root.querySelectorAll(':host > io-navigator > io-menu-options > io-menu-item, io-navigator > io-menu-options > io-menu-item');\n            items.forEach((el: Element) => {\n                const val = (((el as any).value) || (el.getAttribute && el.getAttribute('value')) || '').toString().toLowerCase();\n                if (mode && val === mode) el.setAttribute('vmselected', '');\n                else el.removeAttribute('vmselected');\n            });\n        } catch {}\n    }\n\n    // Log menu item clicks (tab clicks)\n    handleMenuClickCapture(ev: MouseEvent) {\n        try {\n            const path = (ev.composedPath && (ev.composedPath() as any[])) || [];\n            const item = path.find((el: any) => el && typeof el.tagName === 'string' && el.tagName.toUpperCase() === 'IO-MENU-ITEM');\n            if (item && typeof item.textContent === 'string') {\n                const txt = (item.textContent as string).trim();\n                // Derive mode strictly from current hash (exact tab ID)\n                const hash = (window.location && window.location.hash || '').replace(/^#/, '');\n                const params = new URLSearchParams(hash);\n                const page = (params.get('page') || 'About').trim();\n                const mode = page.toLowerCase();\n                console.log('[Controller] tab click captured →', txt, 'mode(from-hash):', mode);\n                const allowed = ['about','arrange','view','select','inspect'];\n                if (allowed.includes(mode)) {\n                    try { console.log('[Controller] sending setViewMode (direct from click)', { mode, currentSimulatorId: this.currentSimulatorId }); } catch {}\n                    this.sendEventToSimulator('setViewMode', { mode });\n                }\n            }\n        } catch {}\n    }\n\n    simulatorStateMutated() {\n        try { console.log('[Controller] simulatorStateMutated → viewMode:', (this.simulatorState?.viewMode || '')); } catch {}\n        // Update underline without re-rendering everything\n        this.updateViewModeTabUnderline();\n    }\n\n    onTopBarSimulatorClick(simId: string) {\n        if (simId && simId !== this.currentSimulatorId) {\n            (this as any).setCurrentSimulator?.(simId);\n        }\n    }\n\n    // === UNITY COMMUNICATION ===\n\n    sendPanEvent(deltaX: number, deltaY: number) {\n        this.sendEventToSimulator('pan', { panXDelta: deltaX, panYDelta: deltaY });\n    }\n\n    sendZoomEvent(zoomDelta: number) {\n        this.sendEventToSimulator('zoom', { zoomDelta });\n    }\n\n    sendSelectEvent(action: string) {\n        this.sendEventToSimulator('select', { action });\n    }\n\n    sendCreateMagnetEvent(magnetData: Magnet) {\n        try {\n            console.log('[Controller] sendCreateMagnetEvent magnetData:', JSON.parse(JSON.stringify(magnetData)));\n        } catch (e) {\n            console.log('[Controller] sendCreateMagnetEvent magnetData (raw):', magnetData);\n        }\n        this.sendEventToSimulator('createMagnet', { magnetData });\n    }\n\n    sendUpdateMagnetEvent(magnetData: Magnet) {\n        this.sendEventToSimulator('updateMagnet', { magnetData });\n    }\n\n    sendDeleteMagnetEvent(magnetId: string) {\n        this.sendEventToSimulator('deleteMagnet', { magnetId });\n    }\n\n    sendPushMagnetEvent(magnetId: string, deltaX: number, deltaY: number) {\n        this.sendEventToSimulator('pushMagnet', { magnetId, deltaX, deltaY });\n    }\n\n    // Push a single item by id (joystick on Select tab)\n    sendPushItemEvent(itemId: string, deltaX: number, deltaY: number) {\n        try { console.log('[Controller] sendPushItemEvent', { itemId, deltaX, deltaY }); } catch {}\n        this.sendEventToSimulator('pushItem', { itemId, deltaX, deltaY });\n    }\n\n    sendEventToSimulator(eventType: string, data: any) {\n        if (!this.clientChannel) {\n            console.error('[Controller] Cannot send event - no client channel');\n            return;\n        }\n\n        if (!this.currentSimulatorId) {\n            console.error('[Controller] Cannot send event - no current simulator ID');\n            return;\n        }\n\n        const payload = {\n            clientId: this.clientId,\n            clientType: SpacetimeController.clientType,\n            clientName: this.clientName,\n            screenId: 'main',\n            targetSimulatorId: this.currentSimulatorId,\n            ...data\n        };\n\n        this.clientChannel.send({\n            type: 'broadcast',\n            event: eventType,\n            payload: payload\n        }).then(() => { try { console.log(`[Controller] Sent '${eventType}'`, payload); } catch {} })\n          .catch((err: any) => { console.error(`[Controller] Send '${eventType}' failed:`, err); });\n    }\n\n    setupPresenceHandlers() {\n        this.clientChannel\n            .on('presence', { event: 'sync' }, () => {\n                const presenceState = this.clientChannel.presenceState();\n                try {\n                    const raw = Object.values(presenceState || {}).flat();\n                    const sims = raw.filter((p: any) => p && p.clientType === 'simulator');\n                    console.log('[Controller][presence:sync] presences:', raw.length, 'simulators:', sims.length);\n                    console.log('[Controller][presence:sync] simulators raw:', sims.map((p: any) => ({\n                        clientId: p.clientId,\n                        nameTop: p.clientName,\n                        nameShared: p.shared && p.shared.clientName,\n                        idxTop: typeof p.simulatorIndex === 'number' ? p.simulatorIndex : 0,\n                        idxShared: p.shared && typeof p.shared.simulatorIndex === 'number' ? p.shared.simulatorIndex : 0\n                    })));\n                } catch {}\n\n\t\t\t\tconst simulator = this.findSimulator(presenceState);\n\t\t\t\t\n\t\t\t\tconst simArray = Array.from(this.currentSimulators.values()) as any[];\n\t\t\t\tif (simArray.length === 0) {\n\t\t\t\t\t// No simulators available: clear selection and state, update UI\n\t\t\t\t\tthis.currentSimulatorId = null;\n\t\t\t\t\tthis.magnetViewMetadata = [];\n\t\t\t\t\ttry { console.log('[Controller] No simulators present → clearing UI state'); } catch {}\n\t\t\t\t\tthis.simulatorState.update({\n\t\t\t\t\t\tclientId: '',\n\t\t\t\t\t\tclientName: '',\n\t\t\t\t\t\tclientType: '',\n\t\t\t\t\t\tcurrentCollection: {},\n\t\t\t\t\t\tcurrentCollectionId: '',\n\t\t\t\t\t\tcurrentCollectionItems: [],\n\t\t\t\t\t\tcurrentScreenId: '',\n\t\t\t\t\t\thighlightedItem: {},\n\t\t\t\t\t\thighlightedItemId: '',\n\t\t\t\t\t\thighlightedItemIds: [],\n\t\t\t\t\t\tmagnets: [],\n\t\t\t\t\t\tscreenIds: [],\n\t\t\t\t\t\tselectedItem: {},\n\t\t\t\t\t\tselectedItemId: '',\n\t\t\t\t\t\tselectedItemIds: [],\n\t\t\t\t\t\tlastUpdated: '',\n\t\t\t\t\t\ttags: [],\n\t\t\t\t\t\tupdateCounter: 0,\n\t\t\t\t\t\tviewMode: 'magnets',\n\t\t\t\t\t} as any);\n\t\t\t\t\t// bump tick so header shows \"(No Simulators)\"\n\t\t\t\t\tthis.simulatorRosterTick = (this.simulatorRosterTick || 0) + 1;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// If our current simulator vanished, pick a fallback by index\n\t\t\t\tif (!this.currentSimulatorId || !this.currentSimulators.has(this.currentSimulatorId)) {\n\t\t\t\t\tlet target: any = null;\n\t\t\t\t\t// try to match previous index if we had one\n\t\t\t\t\tlet prevIndex = 0;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst prev = simArray.find((s: any) => s.clientId === this.currentSimulatorId);\n\t\t\t\t\t\tprevIndex = prev ? (prev.simulatorIndex || (prev.shared && prev.shared.simulatorIndex) || 0) : 0;\n\t\t\t\t\t} catch {}\n\t\t\t\t\tif (prevIndex > 0) {\n\t\t\t\t\t\ttarget = simArray.find((s: any) => (s.simulatorIndex || (s.shared && s.shared.simulatorIndex)) === prevIndex) || null;\n\t\t\t\t\t}\n\t\t\t\t\t// otherwise choose the highest index below previous, else lowest index\n\t\t\t\t\tif (!target) {\n\t\t\t\t\t\tconst byIndex = [...simArray].sort((a: any, b: any) => {\n\t\t\t\t\t\t\tconst ia = a.simulatorIndex || (a.shared && a.shared.simulatorIndex) || 0;\n\t\t\t\t\t\t\tconst ib = b.simulatorIndex || (b.shared && b.shared.simulatorIndex) || 0;\n\t\t\t\t\t\t\treturn ia - ib;\n\t\t\t\t\t\t});\n\t\t\t\t\t\ttarget = byIndex[0] || null;\n\t\t\t\t\t}\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\tthis.currentSimulatorId = target.clientId;\n\t\t\t\t\t\ttry { console.log('[Controller] Fallback selected simulator', { clientId: target.clientId, index: target.simulatorIndex || (target.shared && target.shared.simulatorIndex) }); } catch {}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (simulator) {\n                    // Resolve content for current simulator (async, fire-and-forget)\n                    const shared = (simulator.shared || {}) as SimulatorSharedContent;\n                    contentStore.ensureContent({\n                        contentKey: shared.contentKey,\n                        contentHash: shared.contentHash,\n                        contentIndexUrl: shared.contentIndexUrl,\n                    }).catch(() => {});\n                    contentStore.ensureUnityMeta({\n                        unityMetaKey: shared.unityMetaKey,\n                        unityMetaHash: shared.unityMetaHash,\n                        unityMetaUrl: (shared as any).unityMetaUrl,\n                    }).catch(() => {});\n                    // Prefetch others in the background\n                    const others = Array.from(this.currentSimulators.values())\n                      .map((s: any) => s.shared || {})\n                      .filter((s: any) => s && (s.contentKey || s.contentIndexUrl))\n                      .map((s: any) => ({\n                        contentKey: s.contentKey || s.contentIndexUrl,\n                        contentHash: s.contentHash || '',\n                        contentIndexUrl: s.contentIndexUrl || s.contentKey,\n                      }));\n                    contentStore.prefetch(others);\n\n                    // If preselect by index requested, override with match when available\n                    if ((this as any)._preselectSimulatorIndex) {\n                        for (const sim of this.currentSimulators.values()) {\n                            const idx = (sim as any).simulatorIndex || ((sim as any).shared && (sim as any).shared.simulatorIndex);\n                            if (idx === (this as any)._preselectSimulatorIndex) {\n                                this.currentSimulatorId = (sim as any).clientId;\n                                break;\n                            }\n                        }\n                        (this as any)._preselectSimulatorIndex = null;\n                    }\n                    this.magnetViewMetadata = (simulator.shared as any).unityMetaData?.MagnetView || [];\n                    this.currentSimulatorId = this.currentSimulatorId || simulator.clientId;\n                    this.simulatorState.update(simulator.shared);\n                    // bump tick so UI re-renders simulator menus\n                    this.simulatorRosterTick = (this.simulatorRosterTick || 0) + 1;\n                    try {\n                        const list = Array.from(this.currentSimulators.values()).map((s: any) => ({\n                            clientId: s.clientId,\n                            clientName: s.clientName || (s.shared && s.shared.clientName),\n                            simulatorIndex: s.simulatorIndex || (s.shared && s.shared.simulatorIndex)\n                        }));\n                        console.log('[Controller] roster updated (tick', this.simulatorRosterTick, '):', list);\n                        console.log('[Controller] currentSimulatorId:', this.currentSimulatorId);\n                    } catch {}\n\t\t\t\t} else {\n\t\t\t\t\t// No simulator selected yet; still bump tick to refresh menu state\n\t\t\t\t\tthis.simulatorRosterTick = (this.simulatorRosterTick || 0) + 1;\n\t\t\t\t}\n            });\n    }\n\n    subscribeToChannel() {\n        this.clientChannel.subscribe(async (status: string) => {\n            if (status === 'SUBSCRIBED') {\n                this.clientConnected = true;\n                await this.clientChannel.track({\n                    clientId: this.clientId,\n                    clientType: SpacetimeController.clientType,\n                    clientName: this.clientName,\n                    startTime: Date.now()\n                });\n            }\n        });\n    }\n\n    setCurrentSimulator(simId: string) {\n        this.currentSimulatorId = simId;\n        if (!this.clientChannel) return;\n        // Pull fresh presence state from Supabase and switch to the selected simulator's state\n        const presenceState = this.clientChannel.presenceState();\n        const sim = this.findSimulator(presenceState);\n        if (sim) {\n            this.magnetViewMetadata = (sim.shared as any).unityMetaData?.MagnetView || [];\n            this.simulatorState.update(sim.shared);\n            // Ensure content for selected simulator\n            const shared = (sim.shared || {}) as SimulatorSharedContent;\n            contentStore.ensureContent({\n                contentKey: shared.contentKey,\n                contentHash: shared.contentHash,\n                contentIndexUrl: shared.contentIndexUrl,\n            }).catch(() => {});\n            contentStore.ensureUnityMeta({\n                unityMetaKey: shared.unityMetaKey,\n                unityMetaHash: shared.unityMetaHash,\n                unityMetaUrl: (shared as any).unityMetaUrl,\n            }).catch(() => {});\n        }\n        try {\n            const sel = this.currentSimulators.get(simId) as any;\n            console.log('[Controller] setCurrentSimulator:', simId, 'name=', sel && (sel.clientName || (sel.shared && sel.shared.clientName)), 'index=', sel && (sel.simulatorIndex || (sel.shared && sel.shared.simulatorIndex)));\n        } catch {}\n        // Persist simulatorIndex in URL\n        try {\n            const selected = this.currentSimulators.get(simId) as any;\n            const simIndex = selected && (selected.simulatorIndex || (selected.shared && selected.shared.simulatorIndex));\n            if (simIndex) {\n                const url = new URL(window.location.href);\n                url.searchParams.set('simulatorIndex', String(simIndex));\n                window.history.replaceState({}, '', url.toString());\n                console.log('[Controller] URL simulatorIndex set to', simIndex);\n            }\n        } catch {}\n        // Force UI re-render so selection highlight updates immediately\n        this.simulatorRosterTick = (this.simulatorRosterTick || 0) + 1;\n    }\n\n    async updatePresenceState() {\n        if (this.clientConnected && this.clientChannel) {\n            try {\n                await this.clientChannel.track({\n                    clientId: this.clientId,\n                    clientType: SpacetimeController.clientType,\n                    clientName: this.clientName,\n                    startTime: Date.now()\n                });\n            } catch (error) {\n                console.error('[Connection] Failed to update presence:', error);\n            }\n        }\n    }\n\n    findSimulator(presenceState: PresenceState): SimulatorPresence | null {\n        let lastSimulator: SimulatorPresence | null = null;\n        let simulator: SimulatorPresence | null = null;\n        const values = Object.values(presenceState);\n        this.currentSimulators = new Map();\n        for (const presences of values) {\n            for (const presence of presences as Presence[]) {\n                // Only count fully-initialized simulators (index assigned)\n                const meta: any = presence as any;\n                const simIndexTop = typeof meta.simulatorIndex === 'number' ? meta.simulatorIndex : 0;\n                const simIndexShared = meta.shared && typeof meta.shared.simulatorIndex === 'number' ? meta.shared.simulatorIndex : 0;\n                const simIndex = simIndexTop || simIndexShared;\n                if (meta.clientType === 'simulator' && simIndex > 0) {\n                    // Prefer shared view of fields if available\n                    const merged: any = {\n                        ...meta,\n                        clientName: (meta.shared && meta.shared.clientName) ? meta.shared.clientName : meta.clientName,\n                        simulatorIndex: simIndex,\n                        shared: meta.shared || {}\n                    };\n                    lastSimulator = merged as SimulatorPresence;\n                    this.currentSimulators.set(meta.clientId, merged as SimulatorPresence);\n                    if (meta.clientId == this.currentSimulatorId) {\n                        simulator = lastSimulator;\n                    }\n                } else if (meta.clientType === 'simulator') {\n                    console.log('[Controller] ignoring simulator without index yet:', {\n                        clientId: meta.clientId,\n                        nameTop: meta.clientName,\n                        nameShared: meta.shared && meta.shared.clientName,\n                        idxTop: simIndexTop,\n                        idxShared: simIndexShared\n                    });\n                }\n            }\n        }\n        if (!simulator) {\n            simulator = lastSimulator;\n        }\n        this.currentSimulatorId = simulator?.clientId || null;\n        try {\n            const list = Array.from(this.currentSimulators.values()).map((s: any) => ({\n                clientId: s.clientId,\n                clientName: s.clientName || (s.shared && s.shared.clientName),\n                simulatorIndex: s.simulatorIndex || (s.shared && s.shared.simulatorIndex)\n            }));\n            console.log('[Controller] currentSimulators:', list);\n        } catch {}\n        return simulator;\n    }\n}\n"]}